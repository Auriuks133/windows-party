<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gridView1.Appearance.GroupPanel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>